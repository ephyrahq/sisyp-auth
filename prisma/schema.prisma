generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  picture       String?
  createdAt     DateTime  @default(now())
  emailVerified Boolean
  image         String?
  updatedAt     DateTime
  googleId      String?   @unique
  role          Role      @default(STUDENT)
  accounts      Account[]
  sessions      Session[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Class {
  id              String            @id
  name            String
  branch          String
  semester        Int
  ClassEnrollment ClassEnrollment[]
  Subject         Subject[]
}

model ClassEnrollment {
  id        String  @id
  studentId String
  classId   String
  Class     Class   @relation(fields: [classId], references: [id])
  Student   Student @relation(fields: [studentId], references: [id])
}

model Student {
  id              String            @id
  name            String
  email           String            @unique
  ClassEnrollment ClassEnrollment[]
}

model Subject {
  id        String  @id
  name      String
  teacherId String
  Teacher   Teacher @relation(fields: [teacherId], references: [id])
  Class     Class[]
}

model Teacher {
  id      String    @id
  name    String
  email   String    @unique
  Subject Subject[]
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}
